version: '3.8'

services:
  db_data:
    image: postgres:13
    networks:
      - modmappings-data
    environment:
      - POSTGRES_DB=mmms
      - POSTGRES_USER=mmms
      - POSTGRES_PASSWORD=mmms
    volumes:
      - /var/docker/data:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.labels.type==worker
          - node.labels.system==production
          - node.labels.usecase==modmappings

  db_auth:
    image: mysql:5.7.29
    networks:
      - modmappings-auth
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: wso2carbon
      MYSQL_PASSWORD: wso2carbon
    volumes:
      - /var/docker/wso2/conf/mysql/scripts:/docker-entrypoint-initdb.d
      - /var/docker/wso2/conf/mysql/conf/my.cnf:/etc/mysql/my.cnf
      - /var/docker/wso2/data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-uroot", "-proot" ]
      interval: 30s
      timeout: 60s
      retries: 5
    deploy:
      placement:
        constraints:
          - node.labels.type==worker
          - node.labels.system==production
          - node.labels.usecase==modmappings

  auth:
    image: container.ldtteam.com/modmappings/auth:wso2
    deploy:
      placement:
        constraints:
          - node.labels.type==worker
          - node.labels.system==production
          - node.labels.usecase==modmappings
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.modmappings-auth-http.rule=Host(`dev.auth.modmappings.org`)
        - traefik.http.routers.modmappings-auth-http.entrypoints=http
        - traefik.http.routers.modmappings-auth-http.middlewares=https-redirect
        - traefik.http.routers.modmappings-auth-https.rule=Host(`dev.auth.modmappings.org`)
        - traefik.http.routers.modmappings-auth-https.entrypoints=https
        - traefik.http.routers.modmappings-auth-https.tls=true
        - traefik.http.routers.modmappings-auth-https.service=modmappings-auth
        - traefik.http.routers.modmappings-auth-https.tls.certresolver=le
        - traefik.http.services.modmappings-auth.loadbalancer.server.port=443
        - traefik.http.services.modmappings-auth.loadbalancer.server.scheme=https
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost/carbon/admin/login.jsp"]
      interval: 5s
      timeout: 120s
      start_period: 150s
    volumes:
      - /var/docker/wso2/conf/identity-server:/home/root/wso2-config-volume
    networks:
      - traefik-public
      - modmappings-auth
      
  apiserver:
    image: container.ldtteam.com/modmappings/api:dev
    environment:
      SPRING_R2DBC_NAME: mmms
      SPRING_R2DBC_URL: r2dbc:postgresql://tasks.db_data/mmms
      SPRING_R2DBC_USERNAME: mmms
      SPRING_R2DBC_PASSWORD: mmms
      SPRING_R2DBC_INITIALIZATIONMODE: ALWAYS
      SPRING_R2DBC_POOL_MAX-SIZE: 20
      SPRING_R2DBC_POOL_INITIAL-SIZE: 20
      SPRING_DATA_POSTGRES_HOST: tasks.db_data
      SPRING_DATA_POSTGRES_PORT: 5432
      SPRING_DATA_POSTGRES_DATABASE: mmms
      SPRING_DATA_POSTGRES_USERNAME: mmms
      SPRING_DATA_POSTGRES_PASSWORD: mmms
      SPRING_SECURITY_TARGET_HOST: https://dev.auth.modmappings.org
      SPRING_URL: https://dev.api.modmappings.org/
      SPRINGDOC.SHOW-ACTUATOR: 'true'
    deploy:
      placement:
        constraints:
          - node.labels.type==worker
          - node.labels.system==production
          - node.labels.usecase==modmappings
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.modmappings-api-http.rule=Host(`dev.api.modmappings.org`)
        - traefik.http.routers.modmappings-api-http.entrypoints=http
        - traefik.http.routers.modmappings-api-http.middlewares=https-redirect
        - traefik.http.routers.modmappings-api-https.rule=Host(`dev.api.modmappings.org`)
        - traefik.http.routers.modmappings-api-https.entrypoints=https
        - traefik.http.routers.modmappings-api-https.tls=true
        - traefik.http.routers.modmappings-api-https.service=modmappings-api
        - traefik.http.routers.modmappings-api-https.tls.certresolver=le
        - traefik.http.services.modmappings-api.loadbalancer.server.port=8080
    networks:
      - traefik-public
      - modmappings-data

  redis:
    image: redis-alpine
    deploy:
      placement:
        constraints:
          - node.labels.type==worker
          - node.labels.system==production
          - node.labels.usecase==modmappings
    networks:
      - modmappings-data

networks:
  traefik-public:
    external: true
  modmappings-data:
  modmappings-auth: